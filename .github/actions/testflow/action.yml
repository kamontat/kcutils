name: "Testflow"
description: "For check style, and testing"
inputs:
  with_lint:
    description: "Start checking code style"
    required: false
    default: "false"
  with_unittest:
    description: "Start unit test"
    required: false
    default: "false"
  with_mutator_test:
    description: "Start mutator test"
    required: false
    default: "false"
  mutator_apikey:
    description: "Stryker APIKey to connect with dashboard apis"
    required: false
    default: ""
  with_sonar:
    description: "Start sonar scan codebase"
    required: false
    default: "false"
  github_apikey:
    description: "Github APIKey to connect with github (Require by with_sonar)"
    required: false
    default: ""
  sonar_apikey:
    description: "Sonarsource APIKey to connect with report apis (Require by with_sonar)"
    required: false
    default: ""
  collect_coverage:
    description: "Upload code coverage report to Github Artifact"
    required: false
    default: "false"

runs:
  using: "composite"
  steps:
    - id: lint
      name: Check style
      run: yarn packages lint
      if: ${{ inputs.with_lint == 'true' }}
      shell: bash
    - name: Collect Eslint report
      uses: actions/upload-artifact@v2
      if: ${{ inputs.with_lint == 'true' && failure() }}
      with:
        name: eslint-report
        path: packages/**/reports/eslint-result.json
    - id: unittest
      name: Run unit test
      run: yarn packages test
      if: ${{ inputs.with_unittest == 'true' }}
      shell: bash
    - name: Collect Code Coverage report
      uses: actions/upload-artifact@v2
      if: ${{ inputs.with_unittest == 'true' && inputs.collect_coverage == 'true' }}
      with:
        name: code-coverage-reports
        path: packages/**/coverage/
    - id: mutator_test
      name: Run mutator test
      run: yarn packages test:mutator
      if: ${{ inputs.with_mutator_test == 'true' && inputs.mutator_apikey }}
      shell: bash
      env:
        STRYKER_DASHBOARD_API_KEY: ${{ inputs.mutator_apikey }}
    - id: sonarqube
      name: Scan sourcecode
      uses: SonarSource/sonarcloud-github-action@master
      if: ${{ inputs.with_sonar == 'true' && inputs.github_apikey && inputs.sonar_apikey }}
      env:
        GITHUB_TOKEN: ${{ inputs.github_apikey }}
        SONAR_TOKEN: ${{ inputs.sonar_apikey }}
